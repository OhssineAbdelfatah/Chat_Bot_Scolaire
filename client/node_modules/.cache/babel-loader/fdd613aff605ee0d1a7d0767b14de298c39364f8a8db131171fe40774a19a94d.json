{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\client_server_test\\\\client\\\\src\\\\components\\\\Audio\\\\Record.jsx\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport React, { useState } from 'react';\nimport { ReactMic } from \"react-mic\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Record = () => {\n  _s();\n  const [isRecording, setIsRecording] = useState(false);\n  const [audioData, setAudioData] = useState(null);\n  const startRecording = () => {\n    setIsRecording(true);\n  };\n  const stopRecording = () => {\n    setIsRecording(false);\n  };\n  const onData = recordedData => {\n    setAudioData(recordedData);\n  };\n  const onStop = recordedData => {\n    setAudioData(recordedData);\n    // Envoyer le fichier audio au serveur pour la transcription ici\n    uploadAudioFile(recordedData);\n  };\n  const uploadAudioFile = async audioData => {\n    const formData = new FormData();\n    formData.append(\"audio\", audioData.blob, \"recording.wav\");\n    const response = await axios.post(\"/api/transcribe\", formData);\n    return response.data;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"\",\n      onClick: startRecording,\n      children: \"D\\xE9marrer l'enregistrement\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: stopRecording,\n      children: \"Arr\\xEAter l'enregistrement\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReactMic, {\n      record: isRecording,\n      onData: onData,\n      onStop: onStop,\n      mimeType: \"audio/wav\",\n      strokeColor: \"#000000\",\n      backgroundColor: \"#FF4081\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(Record, \"7uFAzoLfuzsDdYjWxywrpIRJuu8=\");\n_c = Record;\nexport default Record;\nvar _c;\n$RefreshReg$(_c, \"Record\");","map":{"version":3,"names":["axios","React","useState","ReactMic","Record","isRecording","setIsRecording","audioData","setAudioData","startRecording","stopRecording","onData","recordedData","onStop","uploadAudioFile","formData","FormData","append","blob","response","post","data"],"sources":["C:/Users/Lenovo/Desktop/client_server_test/client/src/components/Audio/Record.jsx"],"sourcesContent":["import axios from 'axios';\r\nimport React, { useState } from 'react';\r\nimport { ReactMic } from \"react-mic\";\r\n\r\n\r\n\r\nconst Record = () => {\r\n    const [isRecording, setIsRecording] = useState(false);\r\n    const [audioData, setAudioData] = useState(null);\r\n\r\n    \r\n    const startRecording = () => {\r\n        setIsRecording(true);\r\n    };\r\n    \r\n    const stopRecording = () => {\r\n        setIsRecording(false);\r\n    };\r\n    \r\n    const onData = (recordedData) => {\r\n        setAudioData(recordedData);\r\n    };\r\n    \r\n    const onStop = (recordedData) => {\r\n        setAudioData(recordedData);\r\n        // Envoyer le fichier audio au serveur pour la transcription ici\r\n        uploadAudioFile(recordedData) ; \r\n    };\r\n\r\n    const uploadAudioFile = async (audioData) => {\r\n        const formData = new FormData();\r\n        formData.append(\"audio\", audioData.blob, \"recording.wav\");\r\n        const response = await axios.post(\"/api/transcribe\", formData);\r\n        return response.data;\r\n    };\r\n    \r\n\r\n    \r\n\r\n\r\n  return (\r\n    <div>\r\n      <button className='' onClick={startRecording}>Démarrer l'enregistrement</button>\r\n      <button onClick={stopRecording}>Arrêter l'enregistrement</button>\r\n      <ReactMic\r\n        record={isRecording}\r\n        onData={onData}\r\n        onStop={onStop}\r\n        mimeType=\"audio/wav\"\r\n        strokeColor=\"#000000\"\r\n        backgroundColor=\"#FF4081\"\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Record"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,QAAQ,QAAQ,WAAW;AAAC;AAIrC,MAAMC,MAAM,GAAG,MAAM;EAAA;EACjB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGJ,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACK,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAGhD,MAAMO,cAAc,GAAG,MAAM;IACzBH,cAAc,CAAC,IAAI,CAAC;EACxB,CAAC;EAED,MAAMI,aAAa,GAAG,MAAM;IACxBJ,cAAc,CAAC,KAAK,CAAC;EACzB,CAAC;EAED,MAAMK,MAAM,GAAIC,YAAY,IAAK;IAC7BJ,YAAY,CAACI,YAAY,CAAC;EAC9B,CAAC;EAED,MAAMC,MAAM,GAAID,YAAY,IAAK;IAC7BJ,YAAY,CAACI,YAAY,CAAC;IAC1B;IACAE,eAAe,CAACF,YAAY,CAAC;EACjC,CAAC;EAED,MAAME,eAAe,GAAG,MAAOP,SAAS,IAAK;IACzC,MAAMQ,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEV,SAAS,CAACW,IAAI,EAAE,eAAe,CAAC;IACzD,MAAMC,QAAQ,GAAG,MAAMnB,KAAK,CAACoB,IAAI,CAAC,iBAAiB,EAAEL,QAAQ,CAAC;IAC9D,OAAOI,QAAQ,CAACE,IAAI;EACxB,CAAC;EAMH,oBACE;IAAA,wBACE;MAAQ,SAAS,EAAC,EAAE;MAAC,OAAO,EAAEZ,cAAe;MAAA,UAAC;IAAyB;MAAA;MAAA;MAAA;IAAA,QAAS,eAChF;MAAQ,OAAO,EAAEC,aAAc;MAAA,UAAC;IAAwB;MAAA;MAAA;MAAA;IAAA,QAAS,eACjE,QAAC,QAAQ;MACP,MAAM,EAAEL,WAAY;MACpB,MAAM,EAAEM,MAAO;MACf,MAAM,EAAEE,MAAO;MACf,QAAQ,EAAC,WAAW;MACpB,WAAW,EAAC,SAAS;MACrB,eAAe,EAAC;IAAS;MAAA;MAAA;MAAA;IAAA,QACzB;EAAA;IAAA;IAAA;IAAA;EAAA,QACE;AAEV,CAAC;AAAA,GAhDKT,MAAM;AAAA,KAANA,MAAM;AAkDZ,eAAeA,MAAM;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}