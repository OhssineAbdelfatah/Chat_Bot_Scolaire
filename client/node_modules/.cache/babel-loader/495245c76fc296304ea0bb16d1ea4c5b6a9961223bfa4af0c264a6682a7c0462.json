{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\client_server_test\\\\client\\\\src\\\\components\\\\Chat\\\\Chat.jsx\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from 'react';\n// // import axios from 'axios' ; \n\n// const Chat = () => {\n//   const [currentMessage, setCurrentMessage] = useState(\"\");\n\n//   const handleMessageChange = (event) => {\n//     setCurrentMessage(event.target.value);\n//   }\n\n//   const handleSubmit =(e)=>{\n//     e.preventDefault() ;\n//     // axios.post('http://localhost:5000/',JSON.parse(currentMessage));\n\n//   }\n\n//   useEffect(() => {\n//     const userInput = 'are we friends';\n//     fetch('/api/userinput', {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json'\n//       },\n//       body: JSON.stringify({ userInput })\n//     })\n//       .then(res => res.json())\n//       .then(data => console.log(data));\n//   }, []);\n\n//   // const sendRequest = async()=>{\n//   // } ;\n\n//   // sendRequest()\n\n//   return (\n//     <div>\n//         <div>\n//           <form onSubmit={handleSubmit}>\n//             <input type=\"text\"\n//             value={currentMessage}\n//             onChange={handleMessageChange}\n//             // onKeyDown={handleSubmit}\n//             placeholder=\"Enter your message here\"\n//             />\n//             <button>\n//               send\n//             </button>\n//           </form>\n//         </div>\n//     </div>\n//   )\n// }\n\n// export default Chat\n\nimport { useEffect, useRef, useState } from 'react';\nimport axios from 'axios';\nimport Messages from './../Messages/Messages';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const [responses, setResponses] = useState([]);\n  const [currentMessage, setCurrentMessage] = useState('');\n  const [backendData, setBackendData] = useState([{}]);\n  const [userInput, setUserInput] = useState('');\n  const [dialogFlowRes, setDialogFlowRes] = useState('');\n  const [codeHtml, setCodeHtml] = useState('');\n  const containerRef = useRef(null);\n\n  // const dataToSend = userInput;\n  const languageCode = 'en-US';\n  const queryText = currentMessage;\n  const sessionId = Math.random() * 10;\n  const handleMessageSubmit = queryText => {\n    // const data = {\n    //   languageCode ,\n    //   queryText , \n    //    sessionId \n    // }\n    const sendData = () => {\n      axios.post(\"http://localhost:5000/api/chatbot\", {\n        languageCode,\n        queryText,\n        sessionId\n      }).then(res => {\n        const responseData = {\n          text: res.data.response,\n          isBot: true\n          // html : codeHtml\n        };\n\n        if (res.status == 200) {\n          console.log(res.data);\n          console.log(res.data.html);\n          setResponses(responses => [...responses, responseData]);\n          setCodeHtml(res.datahtml);\n        }\n      }).catch(err => console.log(err));\n    };\n    sendData();\n    // axios\n    //   .post('http://localhost:5000/api/chatbot', {\n    //     languageCode ,\n    //     queryText , \n    //      sessionId \n    //   })\n    //   .then((res) => {\n    //     const responseData = {\n    //       text: res.data.response,\n    //         // res.data['message']['fulfillmentText'] !== ''\n    //         // res.status== 200 \n    //         //   ? res.data.response\n    //         //   // response.data['message']['fulfillmentText']\n    //         //   : \"Sorry, I can't get it. Can you please repeat once?\",\n    //       isBot: true\n    //     }\n    //     setResponses((responses) => [...responses, responseData])\n    //     console.log(responses) ;\n    //   })\n    //   .catch((error) => {\n    //     console.log('Error: ', error)\n    //   })\n  };\n\n  const handleMessageChange = event => {\n    setCurrentMessage(event.target.value);\n  };\n  const handleSubmit = event => {\n    const message = {\n      text: currentMessage,\n      isBot: false\n    };\n    if (event.key === 'Enter' && event.target.value !== '') {\n      setResponses(responses => [...responses, message]);\n      console.log(responses);\n      handleMessageSubmit(message.text);\n      setCurrentMessage('');\n    }\n  };\n  useEffect(() => {\n    containerRef.current.scrollTop = containerRef.current.scrollHeight;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container rounded d-flex  container_wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row \",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-dark text-center py-2 border-bottom\",\n        children: \"chatbot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: containerRef,\n      className: \"row chat_wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: /*#__PURE__*/_jsxDEV(Messages, {\n          messages: responses\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row input_wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col d-flex input_col\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: currentMessage,\n          onChange: handleMessageChange,\n          onKeyDown: handleSubmit,\n          type: \"text\",\n          className: \"form-control\",\n          placeholder: \"enter you msg here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          class: \"btn btn-primary btn-sm \",\n          children: \"send \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"cfyC2cNvhOyrzeKD5iSyyDJnJYo=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["useEffect","useRef","useState","axios","Messages","Chat","responses","setResponses","currentMessage","setCurrentMessage","backendData","setBackendData","userInput","setUserInput","dialogFlowRes","setDialogFlowRes","codeHtml","setCodeHtml","containerRef","languageCode","queryText","sessionId","Math","random","handleMessageSubmit","sendData","post","then","res","responseData","text","data","response","isBot","status","console","log","html","datahtml","catch","err","handleMessageChange","event","target","value","handleSubmit","message","key","current","scrollTop","scrollHeight"],"sources":["C:/Users/Lenovo/Desktop/client_server_test/client/src/components/Chat/Chat.jsx"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\r\n// // import axios from 'axios' ; \r\n\r\n\r\n// const Chat = () => {\r\n//   const [currentMessage, setCurrentMessage] = useState(\"\");\r\n\r\n  \r\n//   const handleMessageChange = (event) => {\r\n//     setCurrentMessage(event.target.value);\r\n//   }\r\n  \r\n//   const handleSubmit =(e)=>{\r\n//     e.preventDefault() ;\r\n//     // axios.post('http://localhost:5000/',JSON.parse(currentMessage));\r\n    \r\n//   }\r\n\r\n  \r\n//   useEffect(() => {\r\n//     const userInput = 'are we friends';\r\n//     fetch('/api/userinput', {\r\n//       method: 'POST',\r\n//       headers: {\r\n//         'Content-Type': 'application/json'\r\n//       },\r\n//       body: JSON.stringify({ userInput })\r\n//     })\r\n//       .then(res => res.json())\r\n//       .then(data => console.log(data));\r\n//   }, []);\r\n  \r\n  \r\n\r\n//   // const sendRequest = async()=>{\r\n//   // } ;\r\n\r\n//   // sendRequest()\r\n\r\n\r\n\r\n\r\n//   return (\r\n//     <div>\r\n//         <div>\r\n//           <form onSubmit={handleSubmit}>\r\n//             <input type=\"text\"\r\n//             value={currentMessage}\r\n//             onChange={handleMessageChange}\r\n//             // onKeyDown={handleSubmit}\r\n//             placeholder=\"Enter your message here\"\r\n//             />\r\n//             <button>\r\n//               send\r\n//             </button>\r\n//           </form>\r\n//         </div>\r\n//     </div>\r\n//   )\r\n// }\r\n\r\n// export default Chat\r\n\r\nimport  { useEffect, useRef, useState } from 'react'\r\nimport axios from 'axios'\r\nimport Messages from './../Messages/Messages' ; \r\nimport './styles.css'\r\n\r\nconst Chat = () => {\r\n  const [responses, setResponses] = useState([])\r\n  const [currentMessage, setCurrentMessage] = useState('');\r\n  const [backendData, setBackendData] = useState([{}]) ; \r\n  const [userInput, setUserInput] = useState('') ; \r\n  const [dialogFlowRes,setDialogFlowRes ] = useState('') ; \r\n  const [codeHtml,setCodeHtml ] = useState('') ; \r\n  const containerRef = useRef(null);\r\n\r\n  // const dataToSend = userInput;\r\n  const languageCode = 'en-US'\r\n  const queryText = currentMessage;\r\n  const sessionId = Math.random()*10;\r\n\r\n\r\n  const handleMessageSubmit = (queryText) => {\r\n    // const data = {\r\n    //   languageCode ,\r\n    //   queryText , \r\n    //    sessionId \r\n    // }\r\n    const sendData = () => {\r\n        axios.post(\"http://localhost:5000/api/chatbot\", {languageCode , queryText , sessionId })\r\n           .then((res) =>{\r\n            const responseData ={\r\n              text: res.data.response,\r\n              isBot: true,\r\n              // html : codeHtml\r\n            }\r\n              if (res.status==200 ){\r\n                console.log(res.data)\r\n                console.log(res.data.html)\r\n                setResponses((responses) => [...responses, responseData]) ; \r\n                setCodeHtml(res.datahtml)\r\n              }\r\n           })\r\n           .catch(err => console.log(err))\r\n        }\r\nsendData();\r\n    // axios\r\n    //   .post('http://localhost:5000/api/chatbot', {\r\n    //     languageCode ,\r\n    //     queryText , \r\n    //      sessionId \r\n    //   })\r\n    //   .then((res) => {\r\n    //     const responseData = {\r\n    //       text: res.data.response,\r\n    //         // res.data['message']['fulfillmentText'] !== ''\r\n    //         // res.status== 200 \r\n    //         //   ? res.data.response\r\n    //         //   // response.data['message']['fulfillmentText']\r\n    //         //   : \"Sorry, I can't get it. Can you please repeat once?\",\r\n    //       isBot: true\r\n    //     }\r\n    //     setResponses((responses) => [...responses, responseData])\r\n    //     console.log(responses) ;\r\n    //   })\r\n    //   .catch((error) => {\r\n    //     console.log('Error: ', error)\r\n    //   })\r\n  }\r\n\r\n  const handleMessageChange = (event) => {\r\n    setCurrentMessage(event.target.value)\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    const message = {\r\n      text: currentMessage,\r\n      isBot: false,\r\n      \r\n    }\r\n    if (event.key === 'Enter' && event.target.value !== '') {\r\n      setResponses((responses) => [...responses, message])\r\n      console.log(responses) ; \r\n      handleMessageSubmit(message.text);\r\n      setCurrentMessage('');\r\n\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    containerRef.current.scrollTop = containerRef.current.scrollHeight;\r\n  }, );\r\n\r\n\r\n  return (\r\n    <div className=\"container rounded d-flex  container_wrapper\">\r\n      <div className=\"row \">\r\n        <h2 className='text-dark text-center py-2 border-bottom'>chatbot</h2>\r\n      </div>\r\n      <div ref={containerRef} className=\"row chat_wrapper\">\r\n        <div className=\"col\">\r\n          <Messages messages={responses}/>\r\n        </div>\r\n      </div>\r\n      <div className=\"row input_wrapper\">\r\n        <div className=\"col d-flex input_col\">\r\n          <input\r\n          value={currentMessage}\r\n          onChange={handleMessageChange}\r\n          onKeyDown={handleSubmit}\r\n          type=\"text\"\r\n          className='form-control'\r\n          placeholder='enter you msg here' />\r\n          <button class=\"btn btn-primary btn-sm \" >send </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Chat"],"mappings":";;AAAA;AACA;;AAGA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;;AAEA;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,SAAUA,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AACpD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAO,cAAc;AAAA;AAErB,MAAMC,IAAI,GAAG,MAAM;EAAA;EACjB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACM,cAAc,EAAEC,iBAAiB,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACpD,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACY,aAAa,EAACC,gBAAgB,CAAE,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACc,QAAQ,EAACC,WAAW,CAAE,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMgB,YAAY,GAAGjB,MAAM,CAAC,IAAI,CAAC;;EAEjC;EACA,MAAMkB,YAAY,GAAG,OAAO;EAC5B,MAAMC,SAAS,GAAGZ,cAAc;EAChC,MAAMa,SAAS,GAAGC,IAAI,CAACC,MAAM,EAAE,GAAC,EAAE;EAGlC,MAAMC,mBAAmB,GAAIJ,SAAS,IAAK;IACzC;IACA;IACA;IACA;IACA;IACA,MAAMK,QAAQ,GAAG,MAAM;MACnBtB,KAAK,CAACuB,IAAI,CAAC,mCAAmC,EAAE;QAACP,YAAY;QAAGC,SAAS;QAAGC;MAAU,CAAC,CAAC,CACpFM,IAAI,CAAEC,GAAG,IAAI;QACb,MAAMC,YAAY,GAAE;UAClBC,IAAI,EAAEF,GAAG,CAACG,IAAI,CAACC,QAAQ;UACvBC,KAAK,EAAE;UACP;QACF,CAAC;;QACC,IAAIL,GAAG,CAACM,MAAM,IAAE,GAAG,EAAE;UACnBC,OAAO,CAACC,GAAG,CAACR,GAAG,CAACG,IAAI,CAAC;UACrBI,OAAO,CAACC,GAAG,CAACR,GAAG,CAACG,IAAI,CAACM,IAAI,CAAC;UAC1B9B,YAAY,CAAED,SAAS,IAAK,CAAC,GAAGA,SAAS,EAAEuB,YAAY,CAAC,CAAC;UACzDZ,WAAW,CAACW,GAAG,CAACU,QAAQ,CAAC;QAC3B;MACH,CAAC,CAAC,CACDC,KAAK,CAACC,GAAG,IAAIL,OAAO,CAACC,GAAG,CAACI,GAAG,CAAC,CAAC;IAClC,CAAC;IACTf,QAAQ,EAAE;IACN;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACF,CAAC;;EAED,MAAMgB,mBAAmB,GAAIC,KAAK,IAAK;IACrCjC,iBAAiB,CAACiC,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACvC,CAAC;EAED,MAAMC,YAAY,GAAIH,KAAK,IAAK;IAC9B,MAAMI,OAAO,GAAG;MACdhB,IAAI,EAAEtB,cAAc;MACpByB,KAAK,EAAE;IAET,CAAC;IACD,IAAIS,KAAK,CAACK,GAAG,KAAK,OAAO,IAAIL,KAAK,CAACC,MAAM,CAACC,KAAK,KAAK,EAAE,EAAE;MACtDrC,YAAY,CAAED,SAAS,IAAK,CAAC,GAAGA,SAAS,EAAEwC,OAAO,CAAC,CAAC;MACpDX,OAAO,CAACC,GAAG,CAAC9B,SAAS,CAAC;MACtBkB,mBAAmB,CAACsB,OAAO,CAAChB,IAAI,CAAC;MACjCrB,iBAAiB,CAAC,EAAE,CAAC;IAEvB;EACF,CAAC;EAEDT,SAAS,CAAC,MAAM;IACdkB,YAAY,CAAC8B,OAAO,CAACC,SAAS,GAAG/B,YAAY,CAAC8B,OAAO,CAACE,YAAY;EACpE,CAAC,CAAG;EAGJ,oBACE;IAAK,SAAS,EAAC,6CAA6C;IAAA,wBAC1D;MAAK,SAAS,EAAC,MAAM;MAAA,uBACnB;QAAI,SAAS,EAAC,0CAA0C;QAAA,UAAC;MAAO;QAAA;QAAA;QAAA;MAAA;IAAK;MAAA;MAAA;MAAA;IAAA,QACjE,eACN;MAAK,GAAG,EAAEhC,YAAa;MAAC,SAAS,EAAC,kBAAkB;MAAA,uBAClD;QAAK,SAAS,EAAC,KAAK;QAAA,uBAClB,QAAC,QAAQ;UAAC,QAAQ,EAAEZ;QAAU;UAAA;UAAA;UAAA;QAAA;MAAE;QAAA;QAAA;QAAA;MAAA;IAC5B;MAAA;MAAA;MAAA;IAAA,QACF,eACN;MAAK,SAAS,EAAC,mBAAmB;MAAA,uBAChC;QAAK,SAAS,EAAC,sBAAsB;QAAA,wBACnC;UACA,KAAK,EAAEE,cAAe;UACtB,QAAQ,EAAEiC,mBAAoB;UAC9B,SAAS,EAAEI,YAAa;UACxB,IAAI,EAAC,MAAM;UACX,SAAS,EAAC,cAAc;UACxB,WAAW,EAAC;QAAoB;UAAA;UAAA;UAAA;QAAA,QAAG,eACnC;UAAQ,KAAK,EAAC,yBAAyB;UAAA,UAAE;QAAK;UAAA;UAAA;UAAA;QAAA,QAAS;MAAA;QAAA;QAAA;QAAA;MAAA;IACnD;MAAA;MAAA;MAAA;IAAA,QACF;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV,CAAC;AAAA,GA/GKxC,IAAI;AAAA,KAAJA,IAAI;AAiHV,eAAeA,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}