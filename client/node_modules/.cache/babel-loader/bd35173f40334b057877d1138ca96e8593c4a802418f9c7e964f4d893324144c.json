{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\client_server_test\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// import { useEffect , useState} from 'react';\n// import axios from 'axios';\n\n// const user=\"\" \n// const bot=\"\" ; \n\n// function App() {\n\n//   const [backendData, setBackendData] = useState([{}]) ; \n//   const [userInput, setUserInput] = useState('') ; \n//   const [dialogFlowRes,setDialogFlowRes ] = useState('') ; \n\n//   // const dataToSend = userInput;\n//    const languageCode = 'en-US'\n//    const queryText = userInput;\n//    const sessionId = Math.random()*10;\n//   const reactData = [{ id: 1, name:' Tom'}, { id: 2, name:' Sarah'}];\n\n//   const  generateUniqueId=() =>{\n//     const timestamp = Date.now();\n//     const randomNumber = Math.random();\n//     const hexadecimalString = randomNumber.toString(16);\n\n//     return `id-${timestamp}-${hexadecimalString}`;\n// }\n\n//   const whoTalk = (isBot , text, id) =>{\n//     return (\n//       `\n//       <div class=\"wrapper ${isBot && 'bot'}\">\n//           <div class=\"chat\">\n//               <div class=\"profile\">\n//                   <img \n//                     src=${isBot ? bot : user} \n//                     alt=\"${isBot ? 'bot' : 'user'}\" \n//                   />\n//               </div>\n//               <div class=\"message\" id=${id}>\n//               ${text}\n//               </div>\n//           </div>\n//       </div>\n//   `\n//   )\n//   }\n\n//   const sendData = () => {\n//   axios.post(\"http://localhost:5000/api/chatbot\", {languageCode , queryText , sessionId })\n//      .then((res) =>{\n//         if (res.status==200 ){\n//           console.log(res.data)\n//           setDialogFlowRes(res.data.response)\n//         }\n//      })\n//      .catch(err => console.log(err))\n//   }\n\n//   const handleChange= (e)=>{\n//     setUserInput(e.target.value) ; \n//   } ; \n\n//   const handleClick =(e)=>{\n//     e.preventDefault() ; \n//     sendData();\n//   }\n\n//   const fetchDataFromServer = async() =>{\n//     fetch('/api')\n//     .then(response => response.json())\n//     .then(data => {\n//       setBackendData(data) ; \n//       console.log(data)\n//     })\n//     .catch(error => console.error(error));\n//   }\n\n//   useEffect(() => {\n//     fetchDataFromServer();\n//   },[])\n\n//   return (\n//     <div className=\"App\">\n//       <form >\n//         <input placeholder='your message...' type=\"text\" value={userInput} onChange={handleChange}/>\n//         <button onClick={handleClick}>send</button>\n//       </form>\n//       <div id='chat_container'>\n//         { dialogFlowRes}\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport React, { useState } from 'react';\nimport Button from './components/Button/Button';\nimport Chat from './components/Chat/Chat';\nimport { Route, BrowserRouter as Router, Routes } from 'react-router-dom';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [show, setShow] = useState(false);\n  const showBtn = () => {\n    setShow(!show);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(TransitionGroup, {\n      children: [/*#__PURE__*/_jsxDEV(CSSTransition, {\n        timeout: 500,\n        classNames: \"item\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          show: show,\n          showBtn: showBtn\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 7\n        }, this), show && /*#__PURE__*/_jsxDEV(Chat, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"NKb1ZOdhT+qUsWLXSgjSS2bk2C4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Button","Chat","Route","BrowserRouter","Router","Routes","CSSTransition","TransitionGroup","App","show","setShow","showBtn"],"sources":["C:/Users/Lenovo/Desktop/client_server_test/client/src/App.js"],"sourcesContent":["// import { useEffect , useState} from 'react';\n// import axios from 'axios';\n\n// const user=\"\" \n// const bot=\"\" ; \n\n// function App() {\n\n//   const [backendData, setBackendData] = useState([{}]) ; \n//   const [userInput, setUserInput] = useState('') ; \n//   const [dialogFlowRes,setDialogFlowRes ] = useState('') ; \n\n//   // const dataToSend = userInput;\n//    const languageCode = 'en-US'\n//    const queryText = userInput;\n//    const sessionId = Math.random()*10;\n//   const reactData = [{ id: 1, name:' Tom'}, { id: 2, name:' Sarah'}];\n  \n\n//   const  generateUniqueId=() =>{\n//     const timestamp = Date.now();\n//     const randomNumber = Math.random();\n//     const hexadecimalString = randomNumber.toString(16);\n\n//     return `id-${timestamp}-${hexadecimalString}`;\n// }\n\n//   const whoTalk = (isBot , text, id) =>{\n//     return (\n//       `\n//       <div class=\"wrapper ${isBot && 'bot'}\">\n//           <div class=\"chat\">\n//               <div class=\"profile\">\n//                   <img \n//                     src=${isBot ? bot : user} \n//                     alt=\"${isBot ? 'bot' : 'user'}\" \n//                   />\n//               </div>\n//               <div class=\"message\" id=${id}>\n//               ${text}\n//               </div>\n//           </div>\n//       </div>\n//   `\n//   )\n//   }\n\n\n//   const sendData = () => {\n//   axios.post(\"http://localhost:5000/api/chatbot\", {languageCode , queryText , sessionId })\n//      .then((res) =>{\n//         if (res.status==200 ){\n//           console.log(res.data)\n//           setDialogFlowRes(res.data.response)\n//         }\n//      })\n//      .catch(err => console.log(err))\n//   }\n\n//   const handleChange= (e)=>{\n//     setUserInput(e.target.value) ; \n//   } ; \n\n//   const handleClick =(e)=>{\n//     e.preventDefault() ; \n//     sendData();\n//   }\n\n\n\n//   const fetchDataFromServer = async() =>{\n//     fetch('/api')\n//     .then(response => response.json())\n//     .then(data => {\n//       setBackendData(data) ; \n//       console.log(data)\n//     })\n//     .catch(error => console.error(error));\n//   }\n  \n//   useEffect(() => {\n//     fetchDataFromServer();\n//   },[])\n\n//   return (\n//     <div className=\"App\">\n//       <form >\n//         <input placeholder='your message...' type=\"text\" value={userInput} onChange={handleChange}/>\n//         <button onClick={handleClick}>send</button>\n//       </form>\n//       <div id='chat_container'>\n//         { dialogFlowRes}\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default App;\n\n\nimport React, { useState } from 'react'\nimport Button from './components/Button/Button'\nimport Chat from './components/Chat/Chat'\nimport {Route , BrowserRouter as Router ,Routes} from 'react-router-dom';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group'\n\n\nfunction App() {\n  const [show, setShow] = useState(false)\n\n  const showBtn = () => {\n    setShow(!show)\n  }\n\n  return (\n    <>\n      <TransitionGroup>\n        <CSSTransition timeout={500} classNames=\"item\" >\n      <Button show={show} showBtn={showBtn} />\n      {show && <Chat />}\n        </CSSTransition>\n      <div />\n    </TransitionGroup>\n    </>\n  )\n}\n\nexport default App;"],"mappings":";;AAAA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,IAAI,MAAM,wBAAwB;AACzC,SAAQC,KAAK,EAAGC,aAAa,IAAIC,MAAM,EAAEC,MAAM,QAAO,kBAAkB;AACxE,SAASC,aAAa,EAAEC,eAAe,QAAQ,wBAAwB;AAAA;AAAA;AAGvE,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAEvC,MAAMY,OAAO,GAAG,MAAM;IACpBD,OAAO,CAAC,CAACD,IAAI,CAAC;EAChB,CAAC;EAED,oBACE;IAAA,uBACE,QAAC,eAAe;MAAA,wBACd,QAAC,aAAa;QAAC,OAAO,EAAE,GAAI;QAAC,UAAU,EAAC,MAAM;QAAA,wBAChD,QAAC,MAAM;UAAC,IAAI,EAAEA,IAAK;UAAC,OAAO,EAAEE;QAAQ;UAAA;UAAA;UAAA;QAAA,QAAG,EACvCF,IAAI,iBAAI,QAAC,IAAI;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QACC,eAClB;QAAA;QAAA;QAAA;MAAA,QAAO;IAAA;MAAA;MAAA;MAAA;IAAA;EACS,iBACf;AAEP;AAAC,GAlBQD,GAAG;AAAA,KAAHA,GAAG;AAoBZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}