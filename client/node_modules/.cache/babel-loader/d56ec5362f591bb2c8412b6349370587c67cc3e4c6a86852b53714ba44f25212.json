{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\client_server_test\\\\client\\\\src\\\\components\\\\Chat\\\\Chat.jsx\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from 'react';\n// // import axios from 'axios' ; \n\n// const Chat = () => {\n//   const [currentMessage, setCurrentMessage] = useState(\"\");\n\n//   const handleMessageChange = (event) => {\n//     setCurrentMessage(event.target.value);\n//   }\n\n//   const handleSubmit =(e)=>{\n//     e.preventDefault() ;\n//     // axios.post('http://localhost:5000/',JSON.parse(currentMessage));\n\n//   }\n\n//   useEffect(() => {\n//     const userInput = 'are we friends';\n//     fetch('/api/userinput', {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json'\n//       },\n//       body: JSON.stringify({ userInput })\n//     })\n//       .then(res => res.json())\n//       .then(data => console.log(data));\n//   }, []);\n\n//   // const sendRequest = async()=>{\n//   // } ;\n\n//   // sendRequest()\n\n//   return (\n//     <div>\n//         <div>\n//           <form onSubmit={handleSubmit}>\n//             <input type=\"text\"\n//             value={currentMessage}\n//             onChange={handleMessageChange}\n//             // onKeyDown={handleSubmit}\n//             placeholder=\"Enter your message here\"\n//             />\n//             <button>\n//               send\n//             </button>\n//           </form>\n//         </div>\n//     </div>\n//   )\n// }\n\n// export default Chat\n\nimport { useState } from 'react';\nimport axios from 'axios';\nimport Messages from './../Messages/Messages';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const [responses, setResponses] = useState([]);\n  const [currentMessage, setCurrentMessage] = useState('');\n  const [backendData, setBackendData] = useState([{}]);\n  const [userInput, setUserInput] = useState('');\n  const [dialogFlowRes, setDialogFlowRes] = useState('');\n\n  // const dataToSend = userInput;\n  const languageCode = 'en-US';\n  const queryText = currentMessage;\n  const sessionId = Math.random() * 10;\n  const handleMessageSubmit = queryText => {\n    const data = {\n      languageCode,\n      queryText,\n      sessionId\n    };\n    const sendData = () => {\n      axios.post(\"http://localhost:5000/api/chatbot\", {\n        languageCode,\n        queryText,\n        sessionId\n      }).then(res => {\n        if (res.status == 200) {\n          console.log(res.data);\n          setDialogFlowRes(res.data.response);\n        }\n      }).catch(err => console.log(err));\n    };\n\n    // axios\n    //   .post('http://localhost:5000/api/chatbot', {\n    //     languageCode ,\n    //     queryText , \n    //      sessionId \n    //   })\n    //   .then((res) => {\n    //     const responseData = {\n    //       text: res.data.response,\n    //         // res.data['message']['fulfillmentText'] !== ''\n    //         // res.status== 200 \n    //         //   ? res.data.response\n    //         //   // response.data['message']['fulfillmentText']\n    //         //   : \"Sorry, I can't get it. Can you please repeat once?\",\n    //       isBot: true\n    //     }\n    //     setResponses((responses) => [...responses, responseData])\n    //     console.log(responses) ;\n    //   })\n    //   .catch((error) => {\n    //     console.log('Error: ', error)\n    //   })\n  };\n\n  const handleMessageChange = event => {\n    setCurrentMessage(event.target.value);\n  };\n  const handleSubmit = event => {\n    const message = {\n      text: currentMessage,\n      isBot: false\n    };\n    if (event.key === 'Enter' && event.target.value !== '') {\n      setResponses(responses => [...responses, message]);\n      console.log(responses);\n      handleMessageSubmit(message.text);\n      setCurrentMessage('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-end px-3 mx-auto\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col justify-between w-full h-auto max-w-xs py-4 my-2 bg-gray-100 shadow-sm lg:max-w-md dark:bg-gray-900 rounded-xl\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col p-3 space-y-4 overflow-y-auto scrolling-touch messagesSection scrollbar-thumb-blue scrollbar-thumb-rounded scrollbar-track-blue-lighter scrollbar-w-2\",\n          children: /*#__PURE__*/_jsxDEV(Messages, {\n            messages: responses\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-center px-3 py-2 border-t-2 border-gray-200 dark:border-gray-600 \",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-full px-2 py-2 bg-white rounded-lg shadow-sm dark:bg-gray-800 lg:max-w-lg \",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: currentMessage,\n              onChange: handleMessageChange,\n              onKeyDown: handleSubmit,\n              placeholder: \"Enter your message here\",\n              className: \"block w-full py-2 pl-3 pr-3 text-sm placeholder-gray-500 bg-white border border-gray-300 rounded-md dark:bg-gray-700 dark:border-gray-900 dark:text-white dark:placeholder-gray-100 focus:outline-none focus:text-gray-900 dark:focus:text-white focus:placeholder-gray-400 dark:focus:placeholder-white focus:ring-1 focus:ring-indigo-300 sm:text-sm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Chat, \"SQ6if0Sf5TUZr+boVgXZhixic+s=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["useState","axios","Messages","Chat","responses","setResponses","currentMessage","setCurrentMessage","backendData","setBackendData","userInput","setUserInput","dialogFlowRes","setDialogFlowRes","languageCode","queryText","sessionId","Math","random","handleMessageSubmit","data","sendData","post","then","res","status","console","log","response","catch","err","handleMessageChange","event","target","value","handleSubmit","message","text","isBot","key"],"sources":["C:/Users/Lenovo/Desktop/client_server_test/client/src/components/Chat/Chat.jsx"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\r\n// // import axios from 'axios' ; \r\n\r\n\r\n// const Chat = () => {\r\n//   const [currentMessage, setCurrentMessage] = useState(\"\");\r\n\r\n  \r\n//   const handleMessageChange = (event) => {\r\n//     setCurrentMessage(event.target.value);\r\n//   }\r\n  \r\n//   const handleSubmit =(e)=>{\r\n//     e.preventDefault() ;\r\n//     // axios.post('http://localhost:5000/',JSON.parse(currentMessage));\r\n    \r\n//   }\r\n\r\n  \r\n//   useEffect(() => {\r\n//     const userInput = 'are we friends';\r\n//     fetch('/api/userinput', {\r\n//       method: 'POST',\r\n//       headers: {\r\n//         'Content-Type': 'application/json'\r\n//       },\r\n//       body: JSON.stringify({ userInput })\r\n//     })\r\n//       .then(res => res.json())\r\n//       .then(data => console.log(data));\r\n//   }, []);\r\n  \r\n  \r\n\r\n//   // const sendRequest = async()=>{\r\n//   // } ;\r\n\r\n//   // sendRequest()\r\n\r\n\r\n\r\n\r\n//   return (\r\n//     <div>\r\n//         <div>\r\n//           <form onSubmit={handleSubmit}>\r\n//             <input type=\"text\"\r\n//             value={currentMessage}\r\n//             onChange={handleMessageChange}\r\n//             // onKeyDown={handleSubmit}\r\n//             placeholder=\"Enter your message here\"\r\n//             />\r\n//             <button>\r\n//               send\r\n//             </button>\r\n//           </form>\r\n//         </div>\r\n//     </div>\r\n//   )\r\n// }\r\n\r\n// export default Chat\r\n\r\nimport  { useState } from 'react'\r\nimport axios from 'axios'\r\nimport Messages from './../Messages/Messages'\r\n\r\nconst Chat = () => {\r\n  const [responses, setResponses] = useState([])\r\n  const [currentMessage, setCurrentMessage] = useState('');\r\n  const [backendData, setBackendData] = useState([{}]) ; \r\n  const [userInput, setUserInput] = useState('') ; \r\n  const [dialogFlowRes,setDialogFlowRes ] = useState('') ; \r\n\r\n  // const dataToSend = userInput;\r\n  const languageCode = 'en-US'\r\n  const queryText = currentMessage;\r\n  const sessionId = Math.random()*10;\r\n\r\n  const handleMessageSubmit = (queryText) => {\r\n    const data = {\r\n      languageCode ,\r\n      queryText , \r\n       sessionId \r\n    }\r\n    const sendData = () => {\r\n        axios.post(\"http://localhost:5000/api/chatbot\", {languageCode , queryText , sessionId })\r\n           .then((res) =>{\r\n              if (res.status==200 ){\r\n                console.log(res.data)\r\n                setDialogFlowRes(res.data.response)\r\n              }\r\n           })\r\n           .catch(err => console.log(err))\r\n        }\r\n\r\n    // axios\r\n    //   .post('http://localhost:5000/api/chatbot', {\r\n    //     languageCode ,\r\n    //     queryText , \r\n    //      sessionId \r\n    //   })\r\n    //   .then((res) => {\r\n    //     const responseData = {\r\n    //       text: res.data.response,\r\n    //         // res.data['message']['fulfillmentText'] !== ''\r\n    //         // res.status== 200 \r\n    //         //   ? res.data.response\r\n    //         //   // response.data['message']['fulfillmentText']\r\n    //         //   : \"Sorry, I can't get it. Can you please repeat once?\",\r\n    //       isBot: true\r\n    //     }\r\n    //     setResponses((responses) => [...responses, responseData])\r\n    //     console.log(responses) ;\r\n    //   })\r\n    //   .catch((error) => {\r\n    //     console.log('Error: ', error)\r\n    //   })\r\n  }\r\n\r\n  const handleMessageChange = (event) => {\r\n    setCurrentMessage(event.target.value)\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    const message = {\r\n      text: currentMessage,\r\n      isBot: false,\r\n    }\r\n    if (event.key === 'Enter' && event.target.value !== '') {\r\n      setResponses((responses) => [...responses, message])\r\n      console.log(responses) ; \r\n      handleMessageSubmit(message.text)\r\n      setCurrentMessage('')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"flex justify-end px-3 mx-auto\">\r\n        <div className=\"flex flex-col justify-between w-full h-auto max-w-xs py-4 my-2 bg-gray-100 shadow-sm lg:max-w-md dark:bg-gray-900 rounded-xl\">\r\n          <div className=\"flex flex-col p-3 space-y-4 overflow-y-auto scrolling-touch messagesSection scrollbar-thumb-blue scrollbar-thumb-rounded scrollbar-track-blue-lighter scrollbar-w-2\">\r\n            <Messages messages={responses} />\r\n          </div>\r\n\r\n          <div className=\"flex justify-center px-3 py-2 border-t-2 border-gray-200 dark:border-gray-600 \">\r\n            <div className=\"w-full px-2 py-2 bg-white rounded-lg shadow-sm dark:bg-gray-800 lg:max-w-lg \">\r\n              <input\r\n                type=\"text\"\r\n                value={currentMessage}\r\n                onChange={handleMessageChange}\r\n                onKeyDown={handleSubmit}\r\n                placeholder=\"Enter your message here\"\r\n                className=\"block w-full py-2 pl-3 pr-3 text-sm placeholder-gray-500 bg-white border border-gray-300 rounded-md dark:bg-gray-700 dark:border-gray-900 dark:text-white dark:placeholder-gray-100 focus:outline-none focus:text-gray-900 dark:focus:text-white focus:placeholder-gray-400 dark:focus:placeholder-white focus:ring-1 focus:ring-indigo-300 sm:text-sm\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Chat"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}