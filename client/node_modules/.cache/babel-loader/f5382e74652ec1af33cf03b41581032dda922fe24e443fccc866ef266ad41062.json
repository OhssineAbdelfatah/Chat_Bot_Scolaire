{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\client_server_test\\\\client\\\\src\\\\components\\\\Chat\\\\Chat.jsx\",\n  _s2 = $RefreshSig$();\nimport { useEffect, useRef, useState } from 'react';\nimport axios from 'axios';\nimport Messages from './../Messages/Messages';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [responses, setResponses] = useState([]);\n  const [currentMessage, setCurrentMessage] = useState('');\n  // const [backendData, setBackendData] = useState([{}]) ; \n  // const [userInput, setUserInput] = useState('') ; \n  // const [dialogFlowRes,setDialogFlowRes ] = useState('') ; \n  // const [codeHtml,setCodeHtml ] = useState('') ; \n  const containerRef = useRef(null);\n  const welcoming = () => {\n    _s();\n    const welocomeMessage = {\n      text: 'hi, how i can help you ? ',\n      isBot: true\n    };\n\n    //   setResponses([welocomeMessage])\n    // }\n\n    useEffect(() => {\n      welcoming();\n      if (containerRef.current) {\n        containerRef.current.scrollTop = containerRef.current.scrollHeight;\n      }\n    });\n    const languageCode = 'fr';\n    // const queryText = currentMessage;\n    const sessionId = Math.random() * 10;\n    const handleMessageSubmit = queryText => {\n      // const data = {languageCode ,queryText ,  sessionId }\n      const sendData = () => {\n        axios.post(\"http://localhost:5000/api/chatbot\", {\n          languageCode,\n          queryText,\n          sessionId\n        }).then(res => {\n          console.log(res.data);\n          const responseData = {\n            text: res.data.response,\n            isBot: true,\n            codeHtml: res.data.html\n          };\n          if (res.status === 200) {\n            setResponses(responses => [...responses, responseData]);\n            // setCodeHtml(res.data.html)\n          }\n        }).catch(err => console.log(err));\n      };\n      sendData();\n    };\n    const handleMessageChange = event => {\n      setCurrentMessage(event.target.value);\n    };\n    const handleSubmit = event => {\n      const message = {\n        text: currentMessage,\n        isBot: false\n      };\n      if (event.key === 'Enter' && event.target.value !== '') {\n        setResponses(responses => [...responses, message]);\n        handleMessageSubmit(message.text);\n        setCurrentMessage('');\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container rounded d-flex  container_wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row \",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-dark text-center py-2 border-bottom\",\n          children: \"chatbot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: containerRef,\n        className: \"row chat_wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: /*#__PURE__*/_jsxDEV(Messages, {\n            messages: responses\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row input_wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col d-flex input_col\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            value: currentMessage,\n            onChange: handleMessageChange,\n            onKeyDown: handleSubmit,\n            type: \"text\",\n            className: \"form-control\",\n            placeholder: \"enter you msg here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary btn-sm \",\n            children: \"send \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }, this);\n  };\n  _s(welcoming, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n};\n_s2(Chat, \"aQ6PdyV0VFn6HOf0FUXsV3ZSEEw=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["useEffect","useRef","useState","axios","Messages","Chat","responses","setResponses","currentMessage","setCurrentMessage","containerRef","welcoming","welocomeMessage","text","isBot","current","scrollTop","scrollHeight","languageCode","sessionId","Math","random","handleMessageSubmit","queryText","sendData","post","then","res","console","log","data","responseData","response","codeHtml","html","status","catch","err","handleMessageChange","event","target","value","handleSubmit","message","key"],"sources":["C:/Users/Lenovo/Desktop/client_server_test/client/src/components/Chat/Chat.jsx"],"sourcesContent":["import  { useEffect, useRef, useState } from 'react';\r\nimport axios from 'axios';\r\nimport Messages from './../Messages/Messages' ; \r\nimport './styles.css';\r\n\r\nconst Chat = () => {\r\n  const [responses, setResponses] = useState([])\r\n  const [currentMessage, setCurrentMessage] = useState('');\r\n  // const [backendData, setBackendData] = useState([{}]) ; \r\n  // const [userInput, setUserInput] = useState('') ; \r\n  // const [dialogFlowRes,setDialogFlowRes ] = useState('') ; \r\n  // const [codeHtml,setCodeHtml ] = useState('') ; \r\n  const containerRef = useRef(null);\r\n\r\n  const welcoming = ()=>{\r\n    const welocomeMessage = {\r\n      text : 'hi, how i can help you ? ' , \r\n      isBot : true  ,  \r\n    }\r\n\r\n  //   setResponses([welocomeMessage])\r\n  // }\r\n  \r\n  useEffect(() => {\r\n    welcoming();\r\n    if (containerRef.current) {\r\n      containerRef.current.scrollTop = containerRef.current.scrollHeight;\r\n    }\r\n  },);\r\n\r\n  const languageCode = 'fr'\r\n  // const queryText = currentMessage;\r\n  const sessionId = Math.random()*10;\r\n\r\n\r\n  const handleMessageSubmit = (queryText) => {\r\n    // const data = {languageCode ,queryText ,  sessionId }\r\n    const sendData = () => {\r\n        axios.post(\"http://localhost:5000/api/chatbot\", {languageCode , queryText , sessionId })\r\n           .then((res) =>{\r\n            console.log(res.data);\r\n            const responseData ={\r\n              text: res.data.response,\r\n              isBot: true,\r\n              codeHtml : res.data.html\r\n            }\r\n              if (res.status===200 ){\r\n                setResponses((responses) => [...responses, responseData]) ; \r\n                // setCodeHtml(res.data.html)\r\n              }\r\n           })\r\n           .catch(err => console.log(err))\r\n        }\r\n        \r\n          sendData();\r\n  }\r\n\r\n  const handleMessageChange = (event) => {\r\n    setCurrentMessage(event.target.value)\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    const message = {\r\n      text: currentMessage,\r\n      isBot: false,\r\n      \r\n    }\r\n    if (event.key === 'Enter' && event.target.value !== '') {\r\n      setResponses((responses) => [...responses, message])\r\n      handleMessageSubmit(message.text);\r\n      setCurrentMessage('');\r\n    }\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    \r\n    <div className=\"container rounded d-flex  container_wrapper\">\r\n      <div className=\"row \">\r\n        <h2 className='text-dark text-center py-2 border-bottom'>chatbot</h2>\r\n      </div>\r\n      <div ref={containerRef} className=\"row chat_wrapper\">\r\n        <div className=\"col\">\r\n          <Messages  messages={responses}/>\r\n        </div>\r\n      </div>\r\n      <div className=\"row input_wrapper\">\r\n        <div className=\"col d-flex input_col\">\r\n          <input\r\n          value={currentMessage}\r\n          onChange={handleMessageChange}\r\n          onKeyDown={handleSubmit}\r\n          type=\"text\"\r\n          className='form-control'\r\n          placeholder='enter you msg here' />\r\n          <button  className=\"btn btn-primary btn-sm \" >send </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n}\r\n\r\nexport default Chat ;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}